$red: #760209;

@mixin linearGradient($values...) {
	background-image: -webkit-linear-gradient($values);
	background-image: -moz-linear-gradient($values);
	background-image: -ms-linear-gradient($values);
	background-image: -o-linear-gradient($values);
}

@mixin linearGradientUrl($gradient, $url){
background-image: -webkit-linear-gradient($gradient), $url;
background-image: -moz-linear-gradient($gradient), $url;
background-image: -ms-linear-gradient($gradient), $url;
background-image: -o-linear-gradient($gradient), $url;
}

@mixin transition($property: all, $duration: .3s, $timing: ease-in-out, $delay: 0s) {
	-webkit-transition: $property $duration $timing $delay;
	-moz-transition: $property $duration $timing $delay;
	-o-transition: $property $duration $timing $delay;
	-ms-transition: $property $duration $timing $delay;
	transition: $property $duration $timing $delay;
}

@mixin twoLinearGradients($first, $second) {
	background-image: -webkit-linear-gradient($first), -webkit-linear-gradient($second);
	background-image: -moz-linear-gradient($first), -moz-linear-gradient($second);
	background-image: -ms-linear-gradient($first), -ms-linear-gradient($second);
	background-image: -o-linear-gradient($first), -o-linear-gradient($second);
}

@mixin radialGradient($values...) {
	background-image: -webkit-radial-gradient($values);
	background-image: -moz-radial-gradient($values);
	background-image: -ms-radial-gradient($values);
	background-image: -o-radial-gradient($values);
}

@mixin rotate($values...) {
	-webkit-transform: rotate($values);
	-moz-transform: rotate($values);
	transform: rotate($values);
}

@mixin origin($values...) {
	-webkit-transform-origin: $values;
	-moz-transform-origin: $values;
	transform-origin: $values;
}

@mixin boxSizing ($value: border-box) {
	-webkit-box-sizing: $value;
	-moz-box-sizing: $value;
	box-sizing: $value;
}

@mixin transform($values...) {
	-webkit-transform: $values;
	-moz-transform: $values;
	transform: $values;
}


#arm {
	//*** BASE ***//
	cursor: pointer;
	width: 60px;
	height: 80px;
	border-radius: 10% / 50%;
	background-color: #666;
	@include twoLinearGradients((left, hsla(0, 0%, 0%, .3) 0%, hsla(0, 0%, 0%, 0) 15%, hsla(0, 0%, 100%, 0) 50%, hsla(0, 0%, 0%, 0) 85%, hsla(0, 0%, 0%, .3)), (top, #333 0%, #666 10%, #999 30%, hsla(0, 0%, 100%, .8) 60%, #999 70%, #666 90%, #333 100%));

	&:before {
		//*** POLE ***//
		content: '';
		position: absolute;
		top: -40px;
		left: 16px;
		width: 16px;
		height: 70px;
		border-radius: 8px;
		box-shadow: 0px 2px 0px #333;
		background-color: #999;
		@include rotate(-10deg);
		@include linearGradient(left, #666 0%, hsla(0, 0%, 100%, .7) 50%, #666 100%);
		background-image: linear-gradient(to right, #666 0%, hsla(0, 0%, 100%, .7) 50%, #666 100%);
		@include transition($duration: .5s);
	}

	&:after {
		//*** BALL ***//
		content: '';
		position: absolute;
		top: -70px;
		left: -4px;
		width: 40px;
		height: 40px;
		border-radius: 100%;
		background-color: $red;
		border: 2px solid darken($red, 5%);
		@include boxSizing;
		@include radialGradient(50% 40%, closest-corner, hsla(0, 0, 100%, .5), hsla(0, 0%, 100%, 0));
		@include transition($duration: .5s);
	}
}

#arm.clicked {
	&:before {
		top: -20px;
		left: 20px;
		@include transform(rotate3d(100, 10, 0, 180deg));
		@include origin(0% 100%);
		@include transition($duration: .5s);
	}

	&:after {
		top: 90px;
		@include transition($duration: .5s);
	}
}

.slot {
	flex-grow: 1;
	background: #FFF27B;
	height: 60px;
	border: 1px solid #363636;
	box-shadow: 0 0 5px 0 #000;

	&__wrapper {
		position: relative;
		width: 100%;
		height: 100%;
		overflow: hidden;

		&::after,
		&::before {
			content: " ";
			display: block;
			height: 20px;
			left: 0;
			position: absolute;
			width: 100%;
		}

		&::after {
			bottom: 0;
			background: rgba(255, 255, 255, 0);
			background: -moz-linear-gradient(top, rgba(255, 255, 255, 0) 0%, rgba(204, 204, 204, 1) 100%);
			background: -webkit-gradient(left top, left bottom, color-stop(0%, rgba(255, 255, 255, 0)), color-stop(100%, rgba(204, 204, 204, 1)));
			background: -webkit-linear-gradient(top, rgba(255, 255, 255, 0) 0%, rgba(204, 204, 204, 1) 100%);
			background: -o-linear-gradient(top, rgba(255, 255, 255, 0) 0%, rgba(204, 204, 204, 1) 100%);
			background: -ms-linear-gradient(top, rgba(255, 255, 255, 0) 0%, rgba(204, 204, 204, 1) 100%);
			background: linear-gradient(to bottom, rgba(255, 255, 255, 0) 0%, rgba(204, 204, 204, 1) 100%);
			filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffffff', endColorstr='#cccccc', GradientType=0);
		}

		&::before {
			top: 0;
			background: rgba(204, 204, 204, 1);
			background: -moz-linear-gradient(top, rgba(204, 204, 204, 1) 0%, rgba(255, 255, 255, 0) 100%);
			background: -webkit-gradient(left top, left bottom, color-stop(0%, rgba(204, 204, 204, 1)), color-stop(100%, rgba(255, 255, 255, 0)));
			background: -webkit-linear-gradient(top, rgba(204, 204, 204, 1) 0%, rgba(255, 255, 255, 0) 100%);
			background: -o-linear-gradient(top, rgba(204, 204, 204, 1) 0%, rgba(255, 255, 255, 0) 100%);
			background: -ms-linear-gradient(top, rgba(204, 204, 204, 1) 0%, rgba(255, 255, 255, 0) 100%);
			background: linear-gradient(to bottom, rgba(204, 204, 204, 1) 0%, rgba(255, 255, 255, 0) 100%);
			filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#cccccc', endColorstr='#ffffff', GradientType=0);		
		}
	}

	&__input {
		margin: 0;
		font-family: Roboto;
		font-size: 20px;
		display: flex;
		align-items: center;
		justify-content: center;
		width: 100%;
		height: 100%;

		&_1.active {
            animation: spin-slot .4s, spin-slot 1s forwards .4s;
        }
		&_2.active {
            animation: spin-slot .2s, spin-slot .4s .2s, spin-slot 1s forwards .6s;
        }
		&_3.active {
            animation: spin-slot .2s, spin-slot .2s .2s, spin-slot .4s .4s, spin-slot 1s forwards .8s;
        }
		&_4.active {
            animation: spin-slot .3s, spin-slot .3s .3s, spin-slot .4s .6s, spin-slot 1s forwards 1s;
        }
	}
}

@keyframes spin-slot {
    from {
		transform: translateY(-100%);
    }
	40% {
		transform: translateY(-200%);
	}
    to {
        transform: translateY(-300%);
    }
  }